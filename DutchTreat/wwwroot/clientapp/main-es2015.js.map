{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/checkout/checkout.component.ts","./ClientApp/app/checkout/checkout.component.html","./ClientApp/app/login/login.component.ts","./ClientApp/app/login/login.component.html","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shared/order.ts","./ClientApp/app/shop/cart.component.ts","./ClientApp/app/shop/cart.component.html","./ClientApp/app/shop/productList.component.ts","./ClientApp/app/shop/productList.component.html","./ClientApp/app/shop/shop.component.ts","./ClientApp/app/shop/shop.component.html","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  //title = 'Product List';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { Cart } from './shop/cart.component';\nimport { Shop } from './shop/shop.component';\nimport { Checkout } from './checkout/checkout.component';\nimport { Login } from './login/login.component';\n\nimport { DataService } from './shared/dataService';\n\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\n\nlet routes = [\n    { path: \"\", component: Shop },\n    { path: \"checkout\", component: Checkout },\n    { path: \"login\", component: Login }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductList,\n    Cart,\n    Shop,\n    Checkout,\n    Login\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(routes, {\n        useHash: true, //using because we are just doing a single SPA within a larger site\n        enableTracing: false //for debugging of the routes set to true\n    })\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n  constructor(public data: DataService, private router: Router) {\n  }\n\n  errorMessage: string = \"\"; \n\n  onCheckout() {\n    this.data.checkout()\n        .subscribe(success => {\n            if (success) {\n                this.router.navigate([\"\"]);\n            }\n        }, err => this.errorMessage = \"Failed to save order\");\n  }\n}","<div class=\"row\">\n  <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\n  <h3>Confirm Order</h3>\n  <table class=\"table table-bordered table-hover\">\n    <tr *ngFor=\"let o of data.order.items\">\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\n      <td>{{ o.quantity }}</td>\n      <td>{{ o.unitPrice|currency:'USD':true }}</td>\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\n    </tr>\n  </table>\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\n    <table class=\"table table-condensed\">\n      <tr>\n        <td class=\"text-right\">Subtotal</td>\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Shipping</td>\n        <td class=\"text-right\">$ 0.00</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Total:</td>\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\n      </tr>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n  </div>\n\n</div>","import { Component } from \"@angular/core\";\nimport { DataService } from \"../shared/dataService\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: \"login\",\n    templateUrl: \"login.component.html\"\n})\nexport class Login {\n\n    constructor(public data: DataService, private router: Router) { }\n\n    errorMessage: string = \"\";\n\n    public creds = {\n        username: \"\",\r\n        password: \"\"\r\n    };\n\n    onLogin() {\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if (this.data.order.items.length == 0) {\r\n                        this.router.navigate([\"\"]);\r\n                    } else {\r\n                        this.router.navigate([\"checkout\"])\r\n                    }\r\n\r\n                }\r\n            }, err => this.errorMessage = \"Failed to login\");\r\n    }\n}","<div class=\"row\">\n  <div class=\"col-md-4 col-md-offset-4\">\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\n    <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\n        <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required />\n            <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\">Username is required</div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" #password=\"ngModel\" required />\n            <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">password is required</div>\n        </div>\n        <div class=\"form-group\">\n            <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"theForm.invalid\" />\n            <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\n        </div>\n        <div class=\"font-italic\">For testing use shawn@dutchtreat.com / P@ssw0rd!</div>\n    </form>\n  </div>\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"./product\";\r\nimport * as OrderNS from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public order: OrderNS.Order = new OrderNS.Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any []) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    login(creds): Observable<boolean> {\r\n        return this.http\r\n            .post(\"/account/createtoken\", creds)\r\n            .pipe(\r\n                map((data: any) => {\r\n                  this.token = data.token;\r\n                  this.tokenExpiration = data.expiration;\r\n                  return true;\r\n        }));\r\n    }\r\n\r\n    public checkout() {\r\n        if(!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString()\r\n        }\r\n\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n        })\r\n            .pipe(\r\n                map(response => {\r\n                    this.order = new OrderNS.Order();\r\n                    return true;\r\n                })\r\n        );\r\n    }\r\n\r\n\r\n    public addToOrder(newProduct: Product) {\r\n        let item: OrderNS.OrderItem = this.order.items.find(i => i.productId == newProduct.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } \r\n        else {\r\n            item = new OrderNS.OrderItem();\r\n            item.productId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n\r\n    /*public products = [{\r\n        title: \"First Productx\",\r\n        price: 19.99\r\n    },\r\n    {\r\n        title: \"Second Productx\",\r\n        price: 9.99\r\n    },\r\n    {\r\n        title: \"Third Productx\",\r\n        price: 14.99\r\n    }];*/\r\n}","import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n    constructor(public data: DataService, private router: Router) { }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            //Force login\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            //Go to checkout\r\n            this.router.navigate([\"login\"]);\r\n        }        \r\n    }\r\n\r\n}","<h3>Shopping Cart</h3>\r\n<div>#/Items: {{ data.order.items.length }}</div>\r\n<div>Subtotal: {{data.order.subtotal | currency:\"USD\":\"symbol\" }}</div>\r\n<table class=\"table table-condensed table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>$</td>\r\n            <td>Total</td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\r\n            <td>{{ o.quantity }}</td>\r\n            <td>{{ o.unitPrice | currency:\"USD\":true }}</td>\r\n            <td>{{ (o.unitPrice * o.quantity) | currency:\"USD\":true }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<button class=\"btn btn-success\" *ngIf=\"data.order.items.length > 0\" (click)=\"onCheckout()\">Checkout</button>\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [ \"productList.component.css\" ]\r\n})\r\nexport class ProductList implements OnInit {\r\n\r\n    constructor(private data:DataService) {\r\n    }\r\n\r\n    public products: Product[] = [];\r\n\r\n    ngOnInit(): void {      \r\n    this.data.loadProducts().\r\n        subscribe(success => {\r\n          if (success) {\r\n            this.products = this.data.products;\r\n          }\r\n        });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.addToOrder(product);\r\n    }\r\n}","<div class=\"row\">\r\n\r\n    <div class=\"product-info col-md-4\" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light p-1 m-1\">\r\n            <img src=\"/img/{{ p.artId }}.jpg\" class=\"img-fluid\" [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{p.category}} - {{p.size}}</div>\r\n            <div><strong>Price</strong>: {{p.price | currency:\"AUD\":\"symbol\" }}</div>\r\n            <div><strong>Artist</strong>: {{p.artist}}</div>\r\n            <div><strong>Title</strong>: {{p.title}}</div>\r\n            <div><strong>Description</strong>: {{p.artDescription}}</div>\r\n            <button id=\"buyButton\" class=\"btn btn-success btn-sm pull-right\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\",\r\n})\r\nexport class Shop {\r\n      title = 'Product List';\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <h3>{{ title }}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n\r\n    <div class=\"col-md-3\">\r\n        <div class=\"card bg-light p-2\">\r\n            <the-cart></the-cart>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}