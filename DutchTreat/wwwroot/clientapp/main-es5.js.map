{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.component.html","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/app/checkout/checkout.component.ts","webpack:///ClientApp/app/checkout/checkout.component.html","webpack:///ClientApp/app/login/login.component.ts","webpack:///ClientApp/app/login/login.component.html","webpack:///ClientApp/app/shared/dataService.ts","webpack:///ClientApp/app/shared/order.ts","webpack:///ClientApp/app/shop/cart.component.ts","webpack:///ClientApp/app/shop/cart.component.html","webpack:///ClientApp/app/shop/productList.component.ts","webpack:///ClientApp/app/shop/productList.component.html","webpack:///ClientApp/app/shop/shop.component.ts","webpack:///ClientApp/app/shop/shop.component.html","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styles","routes","path","component","AppModule","forRoot","useHash","enableTracing","declarations","imports","providers","bootstrap","Checkout","data","router","errorMessage","checkout","subscribe","success","navigate","err","onCheckout","styleUrls","Login","creds","username","password","login","order","items","length","onLogin","DataService","http","token","products","get","pipe","post","tokenExpiration","expiration","orderNumber","orderDate","getFullYear","toString","getTime","headers","set","response","newProduct","item","find","i","productId","quantity","productArtist","artist","productArtId","artId","productCategory","category","productSize","size","productTitle","title","unitPrice","price","push","Date","Order","Array","OrderItem","Cart","loginRequired","ProductList","loadProducts","product","addToOrder","Shop","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  //title = 'Product List';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { Cart } from './shop/cart.component';\nimport { Shop } from './shop/shop.component';\nimport { Checkout } from './checkout/checkout.component';\nimport { Login } from './login/login.component';\n\nimport { DataService } from './shared/dataService';\n\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\n\nlet routes = [\n    { path: \"\", component: Shop },\n    { path: \"checkout\", component: Checkout },\n    { path: \"login\", component: Login }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductList,\n    Cart,\n    Shop,\n    Checkout,\n    Login\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(routes, {\n        useHash: true, //using because we are just doing a single SPA within a larger site\n        enableTracing: false //for debugging of the routes set to true\n    })\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n  constructor(public data: DataService, private router: Router) {\n  }\n\n  errorMessage: string = \"\"; \n\n  onCheckout() {\n    this.data.checkout()\n        .subscribe(success => {\n            if (success) {\n                this.router.navigate([\"\"]);\n            }\n        }, err => this.errorMessage = \"Failed to save order\");\n  }\n}","<div class=\"row\">\n  <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\n  <h3>Confirm Order</h3>\n  <table class=\"table table-bordered table-hover\">\n    <tr *ngFor=\"let o of data.order.items\">\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\n      <td>{{ o.quantity }}</td>\n      <td>{{ o.unitPrice|currency:'USD':true }}</td>\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\n    </tr>\n  </table>\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\n    <table class=\"table table-condensed\">\n      <tr>\n        <td class=\"text-right\">Subtotal</td>\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Shipping</td>\n        <td class=\"text-right\">$ 0.00</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Total:</td>\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\n      </tr>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n  </div>\n\n</div>","import { Component } from \"@angular/core\";\nimport { DataService } from \"../shared/dataService\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: \"login\",\n    templateUrl: \"login.component.html\"\n})\nexport class Login {\n\n    constructor(public data: DataService, private router: Router) { }\n\n    errorMessage: string = \"\";\n\n    public creds = {\n        username: \"\",\r\n        password: \"\"\r\n    };\n\n    onLogin() {\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if (this.data.order.items.length == 0) {\r\n                        this.router.navigate([\"\"]);\r\n                    } else {\r\n                        this.router.navigate([\"checkout\"])\r\n                    }\r\n\r\n                }\r\n            }, err => this.errorMessage = \"Failed to login\");\r\n    }\n}","<div class=\"row\">\n  <div class=\"col-md-4 col-md-offset-4\">\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\n    <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\n        <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required />\n            <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\">Username is required</div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" #password=\"ngModel\" required />\n            <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">password is required</div>\n        </div>\n        <div class=\"form-group\">\n            <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"theForm.invalid\" />\n            <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\n        </div>\n        <div class=\"font-italic\">For testing use shawn@dutchtreat.com / P@ssw0rd!</div>\n    </form>\n  </div>\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"./product\";\r\nimport * as OrderNS from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public order: OrderNS.Order = new OrderNS.Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any []) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    login(creds): Observable<boolean> {\r\n        return this.http\r\n            .post(\"/account/createtoken\", creds)\r\n            .pipe(\r\n                map((data: any) => {\r\n                  this.token = data.token;\r\n                  this.tokenExpiration = data.expiration;\r\n                  return true;\r\n        }));\r\n    }\r\n\r\n    public checkout() {\r\n        if(!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString()\r\n        }\r\n\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n        })\r\n            .pipe(\r\n                map(response => {\r\n                    this.order = new OrderNS.Order();\r\n                    return true;\r\n                })\r\n        );\r\n    }\r\n\r\n\r\n    public addToOrder(newProduct: Product) {\r\n        let item: OrderNS.OrderItem = this.order.items.find(i => i.productId == newProduct.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } \r\n        else {\r\n            item = new OrderNS.OrderItem();\r\n            item.productId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n\r\n    /*public products = [{\r\n        title: \"First Productx\",\r\n        price: 19.99\r\n    },\r\n    {\r\n        title: \"Second Productx\",\r\n        price: 9.99\r\n    },\r\n    {\r\n        title: \"Third Productx\",\r\n        price: 14.99\r\n    }];*/\r\n}","import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n    constructor(public data: DataService, private router: Router) { }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            //Force login\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            //Go to checkout\r\n            this.router.navigate([\"login\"]);\r\n        }        \r\n    }\r\n\r\n}","<h3>Shopping Cart</h3>\r\n<div>#/Items: {{ data.order.items.length }}</div>\r\n<div>Subtotal: {{data.order.subtotal | currency:\"USD\":\"symbol\" }}</div>\r\n<table class=\"table table-condensed table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>$</td>\r\n            <td>Total</td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\r\n            <td>{{ o.quantity }}</td>\r\n            <td>{{ o.unitPrice | currency:\"USD\":true }}</td>\r\n            <td>{{ (o.unitPrice * o.quantity) | currency:\"USD\":true }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<button class=\"btn btn-success\" *ngIf=\"data.order.items.length > 0\" (click)=\"onCheckout()\">Checkout</button>\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [ \"productList.component.css\" ]\r\n})\r\nexport class ProductList implements OnInit {\r\n\r\n    constructor(private data:DataService) {\r\n    }\r\n\r\n    public products: Product[] = [];\r\n\r\n    ngOnInit(): void {      \r\n    this.data.loadProducts().\r\n        subscribe(success => {\r\n          if (success) {\r\n            this.products = this.data.products;\r\n          }\r\n        });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.addToOrder(product);\r\n    }\r\n}","<div class=\"row\">\r\n\r\n    <div class=\"product-info col-md-4\" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light p-1 m-1\">\r\n            <img src=\"/img/{{ p.artId }}.jpg\" class=\"img-fluid\" [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{p.category}} - {{p.size}}</div>\r\n            <div><strong>Price</strong>: {{p.price | currency:\"AUD\":\"symbol\" }}</div>\r\n            <div><strong>Artist</strong>: {{p.artist}}</div>\r\n            <div><strong>Title</strong>: {{p.title}}</div>\r\n            <div><strong>Description</strong>: {{p.artDescription}}</div>\r\n            <button id=\"buyButton\" class=\"btn btn-success btn-sm pull-right\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\",\r\n})\r\nexport class Shop {\r\n      title = 'Product List';\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <h3>{{ title }}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n\r\n    <div class=\"col-md-3\">\r\n        <div class=\"card bg-light p-2\">\r\n            <the-cart></the-cart>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}